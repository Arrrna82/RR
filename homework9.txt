package homework9;
class TV {
    public void on() {
        System.out.println("TV is ON");
    }

    public void off() {
        System.out.println("TV is OFF");
    }

    public void setChannel(int channel) {
        System.out.println("TV set to channel " + channel);
    }
}

class AudioSystem {
    public void on() {
        System.out.println("Audio system is ON");
    }

    public void off() {
        System.out.println("Audio system is OFF");
    }

    public void setVolume(int level) {
        System.out.println("Audio system volume set to " + level);
    }
}

class DVDPlayer {
    public void play() {
        System.out.println("DVD Player is playing");
    }

    public void pause() {
        System.out.println("DVD Player is paused");
    }

    public void stop() {
        System.out.println("DVD Player is stopped");
    }
}

class GameConsole {
    public void on() {
        System.out.println("Game Console is ON");
    }

    public void playGame() {
        System.out.println("Game Console is playing a game");
    }
}

class HomeTheaterFacade {
    private TV tv;
    private AudioSystem audioSystem;
    private DVDPlayer dvdPlayer;
    private GameConsole gameConsole;

    public HomeTheaterFacade(TV tv, AudioSystem audioSystem, DVDPlayer dvdPlayer, GameConsole gameConsole) {
        this.tv = tv;
        this.audioSystem = audioSystem;
        this.dvdPlayer = dvdPlayer;
        this.gameConsole = gameConsole;
    }

    public void watchMovie() {
        System.out.println("Setting up for watching a movie...");
        tv.on();
        audioSystem.on();
        audioSystem.setVolume(5);
        dvdPlayer.play();
    }

    public void endMovie() {
        System.out.println("Shutting down movie mode...");
        dvdPlayer.stop();
        audioSystem.off();
        tv.off();
    }

    public void playGame() {
        System.out.println("Setting up for playing a game...");
        tv.on();
        gameConsole.on();
        gameConsole.playGame();
    }

    public void listenToMusic() {
        System.out.println("Setting up for listening to music...");
        tv.on();
        audioSystem.on();
        audioSystem.setVolume(7);
    }

    public void setVolume(int level) {
        audioSystem.setVolume(level);
    }
}

class MultimediaSystem {
    public static void main(String[] args) {
        TV tv = new TV();
        AudioSystem audioSystem = new AudioSystem();
        DVDPlayer dvdPlayer = new DVDPlayer();
        GameConsole gameConsole = new GameConsole();

        HomeTheaterFacade homeTheater = new HomeTheaterFacade(tv, audioSystem, dvdPlayer, gameConsole);

        homeTheater.watchMovie();
        System.out.println();

        homeTheater.setVolume(8);
        System.out.println();

        homeTheater.endMovie();
        System.out.println();

        homeTheater.playGame();
        System.out.println();

        homeTheater.listenToMusic();
    }
}


package homework9;
import java.util.ArrayList;
import java.util.List;

abstract class FileSystemComponent {
    protected String name;

    public FileSystemComponent(String name) {
        this.name = name;
    }

    public abstract void display();

    public abstract int getSize();
}

class File extends FileSystemComponent {
    private int size;

    public File(String name, int size) {
        super(name);
        this.size = size;
    }

    @Override
    public void display() {
        System.out.println("File: " + name + " (Size: " + size + " KB)");
    }

    @Override
    public int getSize() {
        return size;
    }
}

class Directory extends FileSystemComponent {
    private List<FileSystemComponent> components;

    public Directory(String name) {
        super(name);
        this.components = new ArrayList<>();
    }

    public void addComponent(FileSystemComponent component) {
        if (!components.contains(component)) {
            components.add(component);
        } else {
            System.out.println(component.name + " already exists in " + name);
        }
    }

    public void removeComponent(FileSystemComponent component) {
        if (components.contains(component)) {
            components.remove(component);
        } else {
            System.out.println(component.name + " does not exist in " + name);
        }
    }

    @Override
    public void display() {
        System.out.println("Directory: " + name);
        for (FileSystemComponent component : components) {
            component.display();
        }
    }

    @Override
    public int getSize() {
        int totalSize = 0;
        for (FileSystemComponent component : components) {
            totalSize += component.getSize();
        }
        return totalSize;
    }
}

class FileSystemDemo {
    public static void main(String[] args) {
        File file1 = new File("File1.txt", 100);
        File file2 = new File("File2.txt", 200);
        File file3 = new File("File3.txt", 300);

        Directory folder1 = new Directory("Folder1");
        Directory folder2 = new Directory("Folder2");
        Directory folder3 = new Directory("Folder3");

        folder1.addComponent(file1);
        folder1.addComponent(folder2);

        folder2.addComponent(file2);
        folder2.addComponent(folder3);

        folder3.addComponent(file3);

        System.out.println("File System Structure:");
        folder1.display();

        System.out.println("\nTotal Size of Folder1: " + folder1.getSize() + " KB");
        System.out.println("Total Size of Folder2: " + folder2.getSize() + " KB");
        System.out.println("Total Size of Folder3: " + folder3.getSize() + " KB");

        folder1.addComponent(file1); // Should print a warning
        folder2.removeComponent(file1); // Should print a warning
    }
}